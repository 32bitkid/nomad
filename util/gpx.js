// Generated by CoffeeScript 1.6.2
(function() {
  var Gpx, addDistanceFromStart, fs, latlon, q, readFile, toGeoJSONPoint, xmlParser, xpath;

  xpath = require('xpath');

  latlon = require('./latlon');

  q = require('q');

  fs = require('fs');

  readFile = q.nfbind(fs.readFile);

  xmlParser = require("xmldom").DOMParser;

  toGeoJSONPoint = function(wpt) {
    var ele, lat, lon;

    lat = parseFloat(xpath.select("@lat", wpt)[0].value);
    lon = parseFloat(xpath.select("@lon", wpt)[0].value);
    ele = parseFloat(xpath.select("ele/text()", wpt).toString());
    return [lat, lon, ele];
  };

  addDistanceFromStart = function(coords) {
    var accumulator, currentPoint, distanceToPrevious, index, previousPoint, _i, _len, _results;

    previousPoint = coords[0];
    accumulator = 0;
    _results = [];
    for (index = _i = 0, _len = coords.length; _i < _len; index = ++_i) {
      currentPoint = coords[index];
      distanceToPrevious = latlon.distanceBetween(previousPoint, currentPoint);
      accumulator += distanceToPrevious;
      currentPoint.push(distanceToPrevious);
      currentPoint.push(accumulator);
      _results.push(previousPoint = currentPoint);
    }
    return _results;
  };

  Gpx = (function() {
    function Gpx(dom) {
      this.dom = dom;
      if (this.dom == null) {
        throw "An XML document is required";
      }
    }

    Gpx.prototype.toLineString = function() {
      var coordinates, wpt;

      coordinates = (function() {
        var _i, _len, _ref, _results;

        _ref = xpath.select("//trkpt", this.dom);
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          wpt = _ref[_i];
          _results.push(toGeoJSONPoint(wpt));
        }
        return _results;
      }).call(this);
      addDistanceFromStart(coordinates);
      return {
        type: "LineString",
        coordinates: coordinates
      };
    };

    Gpx.prototype.toPointArray = function(id) {
      var coord, coordinates, wpt, _i, _len, _results;

      coordinates = (function() {
        var _i, _len, _ref, _results;

        _ref = xpath.select("//trkpt", this.dom);
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          wpt = _ref[_i];
          _results.push(toGeoJSONPoint(wpt));
        }
        return _results;
      }).call(this);
      addDistanceFromStart(coordinates);
      _results = [];
      for (_i = 0, _len = coordinates.length; _i < _len; _i++) {
        coord = coordinates[_i];
        _results.push({
          trail: id,
          loc: {
            type: "Point",
            coordinates: coord
          }
        });
      }
      return _results;
    };

    return Gpx;

  })();

  module.exports = function(dom) {
    return new Gpx(dom);
  };

  module.exports.fromFile = function(filename) {
    return readFile(filename, 'utf8').then(function(xml) {
      return new xmlParser().parseFromString(xml);
    }).then(function(dom) {
      return new Gpx(dom);
    });
  };

}).call(this);
